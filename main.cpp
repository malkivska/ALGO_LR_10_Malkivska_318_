#include <iostream>         // Підключення бібліотеки для вводу-виводу
#include "task1.h"          // Підключення заголовочного файлу з оголошенням структури та функцій для завдання 1 (час)
#include "task2.h"          // Підключення заголовочного файлу з оголошенням структури та функцій для завдання 2 (трикутник)

using namespace std;        // Використання простору імен std для спрощення коду (без std::)

int main() {                 // Головна функція програми — точка входу
    int choice;              // Змінна для вибору завдання користувачем

    cout << "Оберіть завдання:\n1 - Час\n2 - Трикутник\n3 - Клітинка шахівниці\nВибір: ";  // Вивід меню
    cin >> choice;           // Введення вибору користувачем

    if (choice == 1) {       // Якщо вибрано перше завдання — робота з часом
        TTime time;          // Створення об'єкта структури TTime для збереження часу

        cout << "Введіть години: ";    // Запит годин
        cin >> time.hour;              // Ввід годин

        cout << "Введіть хвилини: ";  // Запит хвилин
        cin >> time.min;               // Ввід хвилин

        cout << "Введіть секунди: ";  // Запит секунд
        cin >> time.sec;               // Ввід секунд

        int check = time.CheckTime(); // Виклик методу для перевірки коректності часу, результат - код помилки
        cout << "Результат перевірки: " << check << endl;  // Вивід коду помилки (0 - якщо все добре)

        cout << "Час після +1 хвилина (якщо правильний): ";  // Повідомлення про наступний крок - додавання 1 хвилини
        time.NextMin();              // Виклик методу, що додає 1 хвилину до часу, якщо він коректний
        time.Print();                // Вивід оновленого часу у форматі ГГ:ХХ:СС
    }
    else if (choice == 2) {          // Якщо вибрано друге завдання — робота з трикутником
        Triangle t;                  // Створення об'єкта структури Triangle

        cout << "Введіть координати першої вершини:\n";  // Запит координат першої вершини
        cout << "x1 = "; cin >> t.x1;                      // Ввід координати x1
        cout << "y1 = "; cin >> t.y1;                      // Ввід координати y1

        cout << "Введіть координати другої вершини:\n";   // Запит координат другої вершини
        cout << "x2 = "; cin >> t.x2;                      // Ввід координати x2
        cout << "y2 = "; cin >> t.y2;                      // Ввід координати y2

        cout << "Введіть координати третьої вершини:\n";  // Запит координат третьої вершини
        cout << "x3 = "; cin >> t.x3;                      // Ввід координати x3
        cout << "y3 = "; cin >> t.y3;                      // Ввід координати y3

        t.compute();     // Виклик методу для обчислення сторін, периметру і площі трикутника
        t.print();       // Вивід обчислених значень периметру і площі
    }
    else if (choice == 3) {          // Якщо вибрано третє завдання — робота з шаховою клітинкою
        struct Cell {                // Оголошення локальної структури Cell
            int x, y;               // Координати клітинки на шахівниці (ряд, стовпець)
            bool isBlack() {        // Метод для визначення кольору клітинки (true — чорна, false — біла)
                return (x + y) % 2 == 0;  // Формула для кольору: сума координат парна - чорна клітинка
            }
        };

        Cell c;                     // Створення об'єкта Cell

        cout << "Введіть координати клітинки (x, y від 1 до 8):\n"; // Запит координат клітинки
        cout << "x = "; cin >> c.x;   // Ввід координати x (стовпець)
        cout << "y = "; cin >> c.y;   // Ввід координати y (рядок)

        if (c.x < 1 || c.x > 8 || c.y < 1 || c.y > 8)          // Перевірка, що координати в діапазоні 1-8
            cout << "Невірні координати клітинки!" << endl;   // Повідомлення про помилку координат
        else                                                    // Якщо координати коректні
            cout << "Клітинка є " << (c.isBlack() ? "чорною" : "білою") << endl;  // Вивід кольору клітинки
    }
    else {                         // Якщо вибір не відповідає жодному завданню
        cout << "Невірний вибір!" << endl;   // Повідомлення про помилковий вибір
    }

    return 0;                      // Повернення з програми (успішне завершення)
}
